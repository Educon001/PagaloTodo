@using UCABPagaloTodoWeb.Models.CurrentUser
@using UCABPagaloTodoMS.Core.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Newtonsoft.Json
@model PaymentRequest

@* @{ *@
@*     var httpClient = new HttpClient(); *@
@*     var response = httpClient.GetAsync($"https://localhost:5001/paymentformat") *@
@* } *@

@Html.Partial("InnerPageHeader", "Pay")
<section class="inner-page">
    <div class="container">
        <form method="post" asp-route="makePaymentR">
            <div class="mb-3">
                <label asp-for="CardholderName">Card Holder Name</label>
                <input asp-for="CardholderName" class="form-control">
                <span asp-validation-for="CardholderName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="CardNumber">Card Number</label>
                <input asp-for="CardNumber" class="form-control">
                <span asp-validation-for="CardNumber" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="CardSecurityCode">Card Security Code</label>
                <input asp-for="CardSecurityCode" class="form-control">
                <span asp-validation-for="CardSecurityCode" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="ExpirationMonth">Expiration Month</label>
                <input asp-for="ExpirationMonth" class="form-control">
                <span asp-validation-for="ExpirationMonth" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="ExpirationYear">Expiration Year</label>
                <input asp-for="ExpirationYear" class="form-control">
                <span asp-validation-for="ExpirationYear" class="text-danger"></span>
                </div>
            <div class="mb-3">
                <label asp-for="Amount">Amount</label>
                <input asp-for="Amount" class="form-control" type="number" step="0.01">
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label asp-for="Identifier">Identifier</label>
                <input asp-for="Identifier" id="Identifier" class="form-control">
                <span asp-validation-for="Identifier" class="text-danger"></span>
            </div>
            <div class="warning-message">Por favor, introduzca un identificador asociado a una deuda para realizar el pago.</div>
            <div class="form-group">
                <input asp-for="Service" type="hidden" value="@ViewBag.ServiceId" hidden="hidden"/>
                </div>
            @{
                List<PaymentFieldModel> paymentFormat = ViewBag.Message;
                int cont = 0;
            }
            @if (paymentFormat is not null)
            {
                @foreach (var obj in paymentFormat)
                {
                    <input asp-for="@Model.PaymentDetails[@cont].Name" type="hidden" value="@obj.Name" hidden="hidden"/>
                    <div class="mb-3">
                        <label asp-for="@Model.PaymentDetails[@cont].Value">@obj.Name</label>
                        <input asp-for="@Model.PaymentDetails[@cont].Value" class="form-control">
                        @* <input class="form-control"> *@
                    </div>
                    cont++;
                }
            }
              <input asp-for="Consumer" type="hidden" value="@CurrentUser.GetUser().Id" />
            <input asp-for="PaymentStatus" type="hidden" value="@PaymentStatusEnum.Pendiente" />
            <br>
            <button id="submitButton" type="submit" class="btn btn-primary">Create</button>
            <a asp-controller="Consumer" asp-action="SelectService" class="btn btn-secondary">Back</a>
        </form>
    </div>
</section>

@section Scripts
{   @{
        <partial name="_ValidationScriptsPartial"/>
    }
}

<partial name="_ValidationScriptsPartial"/>

<style>
    .warning-message {
        display: none;
        color: red;
        font-weight: bold;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json_parse.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json_parse_state.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json.stringify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/newtonsoft-json/12.0.3/json.min.js"></script>
<script>
    var service = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Service));
    $(document).ready(function () {
        // Agregar event listener para el cambio de selección del servicio y la entrada de texto en el campo Identifier
        $('#Identifier').on('change blur', function () {
            // Verificar si el campo Identifier está lleno
            if ($('#Identifier').val() && (service.ServiceType === "PorConfirmacion")) {
                // El campo Identifier está lleno, buscar la confirmación correspondiente en el servicio
                var identifier = $('#Identifier').val(); // Obtener el valor del campo Identifier del formulario
                var confirmation = service.ConfirmationList.find(function (c) { return c.Identifier === identifier; });
                if (confirmation) {
                    if (confirmation.Status === true) {
                        // La factura ya ha sido pagada, deshabilitar el botón de envío y mostrar un mensaje de advertencia
                        $('#submitButton').attr('disabled', 'disabled');
                        $('.warning-message').text('El identificador ha expirado porque la factura ya ha sido pagada. Por favor, ingrese un nuevo identificador.').show();
                    } else {
                        // La factura no ha sido pagada, asignar el valor de Amount al campo de cantidad y habilitar el botón de envío
                        var amount = confirmation.Amount;
                        $('#Amount').val(amount);
                        $('#submitButton').removeAttr('disabled');
                        $('.warning-message').hide();
                    }
                } else {
                    // No se encontró una confirmación correspondiente, deshabilitar el botón de envío y mostrar un mensaje de advertencia si el servicio seleccionado es de tipo "PorConfirmacion"
                    $('#submitButton').attr('disabled', 'disabled');
                    if (service.ServiceType === "PorConfirmacion") {
                        $('.warning-message').show();
                    } else {
                        $('.warning-message').hide();
                    }
                }
            } else {
                // El campo Identifier está vacío, deshabilitar el botón de envío y ocultar el mensaje de advertencia
                $('#submitButton').attr('disabled', 'disabled');
                $('.warning-message').hide();
            }
        });
    });
</script>