@using UCABPagaloTodoWeb.Models.CurrentUser
@using UCABPagaloTodoMS.Core.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Newtonsoft.Json
@model PaymentRequest

<form method="post">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2>Make Payment</h2>
            <hr>
        </div>
        <div class="mb-3">
            <label asp-for="CardholderName">Card Holder Name</label>
            <input asp-for="CardholderName" class="form-control">
            <span asp-validation-for="CardholderName" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="CardNumber">Card Number</label>
            <input asp-for="CardNumber" class="form-control">
            <span asp-validation-for="CardNumber" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="CardSecurityCode">Card Security Code</label>
            <input asp-for="CardSecurityCode" class="form-control">
            <span asp-validation-for="CardSecurityCode" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="ExpirationMonth">Expiration Month</label>
            <input asp-for="ExpirationMonth" class="form-control">
            <span asp-validation-for="ExpirationMonth" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="ExpirationYear">Expiration Year</label>
            <input asp-for="ExpirationYear" class="form-control">
            <span asp-validation-for="ExpirationYear" class="text-danger"></span>
            </div>
        @{
            var services = ViewBag.Message as List<ServiceModel>;
            var selectList = new SelectList(services, "Id", "Name");
        }
        
        <div class="mb-3">
            <label asp-for="Service">Servicio</label>
            <select name="Service" id="Service" asp-items="@selectList"></select>
        </div>
        
        <div class="mb-3">
            <label asp-for="Amount">Amount</label>
            <input asp-for="Amount" class="form-control" type="number" step="0.01">
            <span asp-validation-for="Amount" class="text-danger"></span>
        </div>
        
        <div class="mb-3">
            <label asp-for="Identifier">Identifier</label>
            <input asp-for="Identifier" class="form-control">
            <span asp-validation-for="Identifier" class="text-danger"></span>
        </div>
        <div class="warning-message">Por favor, introduzca un identificador asociado a una deuda para realizar el pago.</div>
        <input asp-for="Consumer" type="hidden" value="@CurrentUser.GetUser().Id" />
        <input asp-for="PaymentStatus" type="hidden" value="@PaymentStatusEnum.Pendiente" />
        <br>
        <button type="submit" id="submitButton" class="btn btn-primary">Create</button>
        <a asp-controller="Home" asp-action="Index2" class="btn btn-secondary">Back</a>
    </div>
</form>

@section Scripts
{   @{
        <partial name="_ValidationScriptsPartial"/>
    }
}

<partial name="_ValidationScriptsPartial"/>

<style>
    .warning-message {
        display: none;
        color: red;
        font-weight: bold;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json_parse.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json_parse_state.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json.stringify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/newtonsoft-json/12.0.3/json.min.js"></script>
<script>
    $(document).ready(function () {
        // Agregar event listener para el cambio de selección del servicio y la entrada de texto en el campo Identifier
        $('#Service, #Identifier').on('change blur', function () {
            var isSubmitEnabled = false; // Inicializar la variable que indica si el botón de envío debe habilitarse o no

            // Verificar si ambos campos están llenos
            if ($('#Service').val() && $('#Identifier').val()) {
                // Ambos campos están llenos, mostrar una notificación en la consola y serializar el ViewBag.Message a JSON
                var services = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Message));
                var selectedService = null;
                $.each(services, function (index, service) {
                    if (service.Id === $('#Service').val() && service.ServiceType === "PorConfirmacion") {
                        selectedService = service;
                        return false; // Salir del ciclo $.each() cuando se encuentre el servicio seleccionado
                    }
                });

                // Si se encontró el servicio seleccionado y el Identifier del formulario coincide con un elemento en la lista de confirmaciones del servicio seleccionado, obtener el valor del atributo Amount y habilitar el botón de envío
                if (selectedService != null) {
                    var identifier = $('#Identifier').val(); // Obtener el valor del campo Identifier del formulario
                    $.each(selectedService.ConfirmationList, function (index, confirmation) {
                        if (confirmation.Identifier === identifier) {
                            if (confirmation.Status === true) {
                                $('#submitButton').attr('disabled', 'disabled');
                                $('.warning-message').text('El identificador ha expirado porque la factura ya ha sido pagada. Por favor, ingrese un nuevo identificador.').show();
                                return false; // Salir del ciclo $.each() cuando se encuentra una confirmación con estado true
                            }
                            var amount = confirmation.Amount;
                            $('#Amount').val(amount); // Asignar el valor de Amount al campo de cantidad
                            isSubmitEnabled = true; // Habilitar el botón de envío
                            return false; // Salir del ciclo $.each() cuando se encuentre el elemento que coincide con el Identifier del formulario
                        }
                    });
                    // Habilitar o deshabilitar el botón de envío según el valor de la variable isSubmitEnabled
                    if (isSubmitEnabled) {
                        $('#submitButton').removeAttr('disabled');
                        $('.warning-message').hide(); // Ocultar el mensaje de advertencia si el botón de envío está habilitado
                    } else {
                        $('#submitButton').attr('disabled', 'disabled');
                        if (selectedService != null && selectedService.ServiceType === "PorConfirmacion") {
                            $('.warning-message').show(); // Mostrar el mensaje de advertencia si el servicio seleccionado es de tipo "PorConfirmacion" y el botón de envío está deshabilitado
                        } else {
                            $('.warning-message').hide(); // Ocultar el mensaje de advertencia en cualquier otro caso
                        }
                    }
                }
            }
        });

        // Agregar evento de cambio al campo de servicio (#Service) y ocultar el mensaje de advertencia
        $('#Service').on('change', function () {
            $('#submitButton').removeAttr('disabled');
            $('.warning-message').hide();
        });
    });
</script>

        